///
/// @Generated by Mockolo
///

import Alamofire
@testable import AnytimeWeather
import Foundation

final class SearchViewModelProtocolMock: SearchViewModelProtocol {
    init() {}

    var getRecommendationsCallCount = 0
    var getRecommendationsArgValues = [String]()
    var getRecommendationsHandler: ((String) -> ([Keyword]))?
    func getRecommendations(keyword: String) -> [Keyword] {
        getRecommendationsCallCount += 1
        getRecommendationsArgValues.append(keyword)
        if let getRecommendationsHandler = getRecommendationsHandler {
            return getRecommendationsHandler(keyword)
        }
        return [Keyword]()
    }
}

final class KeywordProviderMock: KeywordProvider {
    init() {}

    static var historyCallCount = 0
    static var historyHandler: (() -> ([Keyword]))?
    static func history() -> [Keyword] {
        historyCallCount += 1
        if let historyHandler = historyHandler {
            return historyHandler()
        }
        return [Keyword]()
    }

    static var predictCallCount = 0
    static var predictHandler: (() -> ([Keyword]))?
    static func predict() -> [Keyword] {
        predictCallCount += 1
        if let predictHandler = predictHandler {
            return predictHandler()
        }
        return [Keyword]()
    }
}

final class WeatherServiceProtocolMock: WeatherServiceProtocol {
    init() {}

    var getWeatherCallCount = 0
    var getWeatherArgValues = [(String, String)]()
    var getWeatherHandler: ((String, String, @escaping ((WeatherDTO?) -> Void)) -> Void)?
    func getWeather(city: String, unit: String, completion: @escaping ((WeatherDTO?) -> Void)) {
        getWeatherCallCount += 1
        getWeatherArgValues.append((city, unit))
        if let getWeatherHandler = getWeatherHandler {
            getWeatherHandler(city, unit, completion)
        }
    }
}
